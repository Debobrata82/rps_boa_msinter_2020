<dependency>
            <groupId>com.graphql-java</groupId>
            <artifactId>graphql-spring-boot-starter</artifactId>
            <version>5.0.2</version>
        </dependency>
        <dependency>
            <groupId>com.graphql-java</groupId>
            <artifactId>graphql-java-tools</artifactId>
            <version>5.2.4</version>
        </dependency>
        <dependency>
            <groupId>com.graphql-java</groupId>
            <artifactId>graphiql-spring-boot-starter</artifactId>
            <version>5.0.2</version>
        </dependency>
        <dependency>
	        <groupId>org.antlr</groupId>
			<artifactId>antlr4-runtime</artifactId>
			<version>4.7.1</version>
			<scope>compile</scope>
		</dependency>


Step2

type Customer {
	customerId: ID!,
	name: String,
	email: String,
	dob: String,
	gender:String
    addressList: [Address!]!
}


type Address {
	addressId: ID!,
	city: String,
	state: String,
	doorNo: String,
	street: String,
	customer: Customer!
}

type Query {
	findAllCustomers:[Customer]
	findCustomer(customerId: ID):Customer
}



input AddressInput {
	addressId: ID!,
	city: String,
	state: String,
	doorNo: String,
	street: String
	
	
}

type Mutation {
	createCustomer(firstName: String!, lastName: String!, email: String, dob: String, gender: String, addressList:[AddressInput!]! ):Customer
}


step3

# Graphql
#graphql.servlet.mapping: /apis/graphql
graphql.tools.schema-location-pattern: **/*.graphqls

